Rickshaw.namespace('Rickshaw.Fixtures.RandomData');

Rickshaw.Fixtures.RandomData = function(timeInterval) {

	var addData;
	timeInterval = timeInterval || 1;

	var lastRandomValue = 200;
        var lastValue = 0;

	var timeBase = Math.floor(new Date().getTime() / 1000);

	this.addData = function(data) {

		var randomValue = Math.random() * 100 + 15 + lastRandomValue;
		var index = data[0].length;

		var counter = 1;

		data.forEach( function(series) {
			var randomVariance = Math.random() * 20;
			var v = randomValue / 25  + counter++ +
				(Math.cos((index * counter * 11) / 960) + 2) * 15 +
				(Math.cos(index / 7) + 2) * 7 +
				(Math.cos(index / 17) + 2) * 1;

			series.push( { x: (index * timeInterval) + timeBase, 
                            y: Math.log(v + randomVariance) - Math.log(lastValue) } );
		
                        lastValue = v + randomVariance;
                } );

		lastRandomValue = randomValue * 0.85;
	};

	this.removeData = function(data) {
		data.forEach( function(series) {
			series.shift();
		} );
		timeBase += timeInterval;
	};
        
        this.applyFilter = function(data, coeffs) {
            
           var yt = data[0].slice(0); 
           
           
           
           var L = coeffs.length;
           var n_obs = yt.length;
           
           
           var signal = new Array(n_obs - (L-1));
           var n_sig = n_obs - (L-1);
         
           var sum = 0;
           for(var i = L-1; i < n_obs; i++) {
       
             sum = 0; 
             for(var l = 0; l < L; l++) { 
               sum = sum + coeffs[l]*yt[i-l].y; 
             }     
             signal[i - (L-1)] = sum;
           }
            
           
           console.log(signal); 
            
           for(var i = 0; i < n_sig; i++) {
               data[1][n_obs - 1 - i].y = .10;
               //data[1][n_obs - 1 - i].y = signal[n_sig - 1 - i];
               data[1][n_obs - 1 - i].x = data[0][n_obs - 1 - i].x;
           }
           
           console.log(data[1]);
           
        };

};

